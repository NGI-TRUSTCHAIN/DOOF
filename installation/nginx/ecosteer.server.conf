server {
    listen 80;
    # listen 443;

    # Root directory
    root /home/ecosteer/NGI-TRUSTCHAIN/DOOF/pilot;

    location ~* \.(js|css|jpg|jpeg|png|gif|ico|html)$ {
        try_files $uri $uri =404;
        access_log off;
        expires max;
    }

    # Default server block to serve Data Exchange as the homepage
    location / {
        try_files $uri $uri/ /index.html =404;
        proxy_cache_bypass $http_pragma;
        proxy_cache_bypass $http_authorization;
        add_header Cache-Control "no-cache, max-age=0";
        expires off;
    }

    # Location for the login page
    location = login.html {
        try_files $uri $uri/ /login.html =404;
    }

     # Location for owner_app (this will simply return homepage of Data Exhange)
     
    location /apps/owner/owner_app.html {
        try_files $uri $uri/ /index.html =404;
    }


    # Location to handle the login form submission
    # This would normally include proxying versus auth server
    location = /login-handler {
    add_header X-Username $http_username always;
    add_header X-Real-IP $remote_addr always;
    add_header X-Forwarded-For $proxy_add_x_forwarded_for always;

    # Respond immediately with 200 OK
    return 200 'Login successful';
    }

    # Redirect unauthorized users back to the login page if the login-handler reports a 401 error
    location @error401 {
        return 401;
    }

    # Specific endpoint for sysadmin 
    location = /dop/sysadmin {
        proxy_pass http://127.0.0.1:2783/sysadmin;
        proxy_set_header Host $host;
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Authorization $http_authorization; # Pass the Authorization header
        proxy_redirect off;
        proxy_intercept_errors on;
    }

    # API endpoint
    location ~ ^/dop/(?!sysadmin)([A-Za-z]+)$ {
        set $upstream http://127.0.0.1:2783;
        proxy_pass $upstream/$1;
        proxy_set_header Host $host;
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Authorization $http_authorization; # Pass the Authorization header
        proxy_redirect off;
        proxy_intercept_errors on;
    }

    location = /index.html {
        try_files $uri $uri/ =404;
    }
}
