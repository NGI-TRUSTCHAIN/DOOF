

# configuration for the blockchain provider
blockchainMonitorProvider:
  path:   '/home/ecosteer/NGI-TRUSTCHAIN/DOOF/provider/python/intermediation/monitor/mon_ethereum.py'
  provider: 'monitorEthereum'
  # url:            protocol, address and port of the rpc node to connect to
  # poamiddleware:  yes/no use yes if the node/network is configured with a POA consensus algo
  # rc:             retries count - if the provider looses connectivity to the node, then
  #                 it tries to reconnect rc times. If the count is < rc then the provider
  #                 returns a recoverable error, in that case the consumer will not do anythin.
  #                 When retries count is => rc then the provider returns a non recoverable error
  configuration: 'url=http://127.0.0.1:8545;poamiddleware=yes;rc=3;'


outputProvider:
  path:   '/home/ecosteer/NGI-TRUSTCHAIN/DOOF/provider/python/presentation/output/rabbitmq/pres_output_rabbitqueue.py'
  class: 'outputRabbitQueue'
  configuration: 'url=amqp://ecosteer:ecosteer@127.0.0.1:5672/;queue_name=imperatives;rc=10;rd=10;dm=1;'

  # configuration for the monitor process/mainloop
process:
  # file to be used to dump the starting and the last processed block index
  indexfile:  '/home/ecosteer/conf/monitor/monitor.lastindex'
  # delay in seconds to wait for a 'latest' scan when all the indexes have been processed
  scandelay:  1

events:
- 'LogMemberCreate (address _marketplace, bytes32 _account_mkt_address, bytes32 _err_code)'
- 'LogProductCreate (address _marketplace, bytes32 _product_mkt_address, bytes32 _err_code)'
- 'LogSubscriptionCreate (address _marketplace, bytes32 _subscription_mkt_address, bytes32 _err_code)'
- 'LogProductUpdate (address _marketplace, bytes32 _product_marketplace_address, bytes32 _err_code)'
- 'LogSubscriptionGranted (address _marketplace, bytes32 _subscription_mkt_address, bytes32 _err_code)'
- 'LogSubscriptionRevoked (address _marketplace, bytes32 _subscription_mkt_address, bytes32 _err_code)'
- 'LogSubscriptionDelete (address _marketplace, bytes32 _subscription_mkt_address, bytes32 _err_code)'



